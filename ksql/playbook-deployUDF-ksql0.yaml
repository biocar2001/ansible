-
    name: "Execute pipeline ksql and ksql-udf"
    hosts: ksql_servers
    tasks:
        -
            name: "Extract .zip in /temp/{{ name_directory }}"
            ansible.builtin.unarchive:
              src: "/temp/{{ name_file }}"
              dest: "/temp/{{ name_directory }}"
        -
            name: Find files .jar
            find:
              paths: "/temp/{{ name_directory }}"
              patterns: "*.jar"
            register: output
        -
            name: Find files .ksql
            find:
              paths: "/temp/{{ name_directory }}"
              patterns: "*.ksql"
            register: outputk
        -
            name: Ansible copy multiple files with wildcard matching *.jar to KSQL servers.
            copy:
              src: "{{ item }}"
              dest: /etc/ksqldb/ext/
              owner: cp-ksql
              group: confluent
              mode: 0755
              force: yes
            with_fileglob:
              - "/temp/{{ name_directory }}/*.jar"
            when: output.matched == 1

        -
            name: Restart Service
            systemd:
              daemon_reload: true
              name: "{{ ksql_service_name }}"
              state: restarted
        -
            name: Wait for API to return 200
            uri:
              url: "http://localhost:8088/info"
              status_code: 200
              validate_certs: false
              # Basic auth header is redundant for non rbac install
              # url_username: "{{ksql_health_check_user}}"
              # url_password: "{{ksql_health_check_password}}"
              # force_basic_auth: true
            register: result1
            until: result1.status == 200
            retries: 40
            delay: 5
            when: not ksql_ssl_mutual_auth_enabled|bool
            ignore_errors: true
        -
            name: "Execute a script or curl gainst KSQL api"
            ansible.builtin.script: ./cur_ksql.sh /temp/{{ name_directory }}/*.ksql localhost
            when: outputk.matched == 1
        -
            name: "delete directory"
            file:
              state: absent
              path: "/temp/{{ name_directory }}/"
